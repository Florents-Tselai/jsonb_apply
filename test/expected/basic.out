-- func passed without args
select jsonb_apply('{}', 'updfgdper');
ERROR:  expected a left parenthesis
select jsonb_apply('{}', 'updfgdper()');
ERROR:  function "updfgdper()" does not exist
-- sanity checks and errors for functions with not-suport nargs or rettype
select jsonb_apply('"hello"', 'length(text)');
ERROR:  requested function does not return "text", but oid=23
select jsonb_apply('"hello"', 'replace(text, text, text)');
ERROR:  only functions with pronargs=1 are supported, requested function has pronargs=3
-- basic transformation functions not relying on encoding (e.g. md5 does)
select jsonb_apply('"hELLo"', 'lower(text)');
 jsonb_apply 
-------------
 "hello"
(1 row)

select jsonb_apply('"hELLo"', 'upper(text)');
 jsonb_apply 
-------------
 "HELLO"
(1 row)

select jsonb_apply('"    hELLo  "', 'ltrim(text)');
 jsonb_apply 
-------------
 "hELLo  "
(1 row)

select jsonb_apply('"    hELLo  "', 'rtrim(text)');
 jsonb_apply 
-------------
 "    hELLo"
(1 row)

select jsonb_apply('"    hELLo  "', 'btrim(text)');
 jsonb_apply 
-------------
 "hELLo"
(1 row)

select jsonb_apply('"hello"', 'quote_ident(text)');
 jsonb_apply 
-------------
 "hello"
(1 row)

select jsonb_apply('"hello"', 'quote_literal(text)');
 jsonb_apply 
-------------
 "'hello'"
(1 row)

select jsonb_apply('"hELLo"', 'reverse(text)');
 jsonb_apply 
-------------
 "oLLEh"
(1 row)

-- complex objects
select jsonb_apply('{"f": "John", "l": "Doe", "message": "Who are you?", "arr": ["Hello", {"k": "value"}]}', 'lower(text)');
                                      jsonb_apply                                       
----------------------------------------------------------------------------------------
 {"f": "john", "l": "doe", "arr": ["hello", {"k": "value"}], "message": "who are you?"}
(1 row)

select jsonb_apply('{"f": "John", "l": "Doe", "message": "Who are you?", "arr": ["Hello", {"k": "value"}]}', 'upper(text)');
                                      jsonb_apply                                       
----------------------------------------------------------------------------------------
 {"f": "JOHN", "l": "DOE", "arr": ["HELLO", {"k": "VALUE"}], "message": "WHO ARE YOU?"}
(1 row)

select jsonb_apply('{"f": "John", "l": "Doe", "message": "Who are you?", "arr": ["Hello", {"k": "value"}]}', 'reverse(text)');
                                      jsonb_apply                                       
----------------------------------------------------------------------------------------
 {"f": "nhoJ", "l": "eoD", "arr": ["olleH", {"k": "eulav"}], "message": "?uoy era ohW"}
(1 row)

